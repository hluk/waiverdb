{
  "id": "759dfd03-855c-40fe-be30-052cf569b9f1",
  "realm": "EmployeeIDP",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "d00ccfff-7067-4f7f-9ff5-2da33e743fe8",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "759dfd03-855c-40fe-be30-052cf569b9f1",
        "attributes": {}
      },
      {
        "id": "1cbca3c9-3969-48b2-8f97-3aeb75c1df50",
        "name": "default-roles-employeeidp",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "759dfd03-855c-40fe-be30-052cf569b9f1",
        "attributes": {}
      },
      {
        "id": "b1f61c60-5967-49f8-83c1-a2a5b6d3d4a4",
        "name": "admin",
        "composite": false,
        "clientRole": false,
        "containerId": "759dfd03-855c-40fe-be30-052cf569b9f1",
        "attributes": {}
      },
      {
        "id": "90961ae6-21db-42a7-9f7d-a89f18774bd5",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "759dfd03-855c-40fe-be30-052cf569b9f1",
        "attributes": {}
      }
    ],
    "client": {
      "waiverdb": [],
      "realm-management": [
        {
          "id": "f7326180-9b88-4094-a370-96eba696a366",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "af233060-4f0b-4d03-bfa6-1487d7e5ad48",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "5c7c00c0-9fd7-45c2-8433-857d514e59d3",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "10e31890-5f4b-4d81-bf47-b863d359127a",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "3f8e5d6c-242f-4dcb-9e38-7970ee71a11a",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "f640b1e3-1d77-449c-838c-498fd692b65d",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "4a36d557-5caf-48dd-8169-76d3b19609e3",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "90fa43ce-4d30-4dd8-a855-612fbe04667a",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "bea0c960-358c-4455-8bac-e3eeec6c1b55",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "ce5ee6f0-b839-4d81-8883-5faceb3fbc84",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "6d18acfe-0640-4b71-b671-ff8cafbb5e9b",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "d90ef503-c246-404b-b44b-d8c78f1a796a",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "a9971c2a-a34b-4fb1-8073-12ce2eea00d4",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "db06122f-1daf-4328-b1bd-9e69130f6440",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "3c063518-48e9-416c-b89d-4393a755c5d7",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "a637f850-bb72-45e2-a321-2ed2f19d00e0",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "5bfed975-70d5-40cf-9cae-a891c3647f66",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "eac6e81b-1829-417b-8724-5bdd26c805fe",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-identity-providers",
                "query-users",
                "manage-realm",
                "query-groups",
                "query-realms",
                "view-clients",
                "manage-events",
                "view-users",
                "view-events",
                "view-realm",
                "view-identity-providers",
                "manage-users",
                "create-client",
                "query-clients",
                "impersonation",
                "view-authorization",
                "manage-clients",
                "manage-authorization"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        },
        {
          "id": "0118d86a-090b-4eb6-813c-8f8c33443f2d",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "e3a033b6-f5c3-4b28-96cd-5af1a8d240e4",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "bf539f72-0b51-4e80-88e5-612f4e9bd0e7",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "9fe42345-2be3-4f06-873f-ae345dacaa62",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "5868d0dc-64c3-4727-bc58-7d1859e3c599",
          "attributes": {}
        },
        {
          "id": "b3ce2e64-17a1-4caf-b745-6ffcd94a33e7",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "5868d0dc-64c3-4727-bc58-7d1859e3c599",
          "attributes": {}
        },
        {
          "id": "4d272679-7de7-4072-8539-545ca8b6dc6d",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "5868d0dc-64c3-4727-bc58-7d1859e3c599",
          "attributes": {}
        },
        {
          "id": "6ca42dd7-f605-4b90-8fae-41a4454bc777",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "5868d0dc-64c3-4727-bc58-7d1859e3c599",
          "attributes": {}
        },
        {
          "id": "640364ce-2807-4b98-b5b0-89df1f958260",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "5868d0dc-64c3-4727-bc58-7d1859e3c599",
          "attributes": {}
        },
        {
          "id": "1461e1f0-bd22-4f52-b4c6-b3ad661f3483",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "5868d0dc-64c3-4727-bc58-7d1859e3c599",
          "attributes": {}
        },
        {
          "id": "492ad4c9-b6ae-4c73-9bf6-ebd85cf04d0d",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "5868d0dc-64c3-4727-bc58-7d1859e3c599",
          "attributes": {}
        },
        {
          "id": "8402c5a5-749f-4246-9131-8bb95d2ea7fa",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "5868d0dc-64c3-4727-bc58-7d1859e3c599",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "1cbca3c9-3969-48b2-8f97-3aeb75c1df50",
    "name": "default-roles-employeeidp",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "759dfd03-855c-40fe-be30-052cf569b9f1"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "a1fd8ceb-e4c0-4cf5-a925-0af52aaff220",
      "username": "admin",
      "firstName": "Admin",
      "lastName": "Admin",
      "email": "noreply@example.com",
      "emailVerified": false,
      "createdTimestamp": 1711463297204,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "26345e6b-2ce8-42fc-9d67-5d707aa2351b",
          "type": "password",
          "createdDate": 1711463297572,
          "secretData": "{\"value\":\"b11WyAKXpZNrYTuPRjxN6HpeaG9fTBArngwvi4/X94TSNU/ZZpI5F6EXHf4+hBX1kUj0C5hhxcXlS7LsroHLKQ==\",\"salt\":\"/h2aa2JuRQJkU7+kI7h8Fw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-employeeidp",
        "admin"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "47385b8d-a84d-477a-8a46-a8c99e664e9e",
      "username": "service-account-waiverdb",
      "emailVerified": false,
      "createdTimestamp": 1712218520924,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "waiverdb",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-employeeidp"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "5868d0dc-64c3-4727-bc58-7d1859e3c599",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/EmployeeIDP/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/EmployeeIDP/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "08edf2e9-5623-42b1-9a9e-862eeccdaed1",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/EmployeeIDP/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/EmployeeIDP/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "ecc3d4e5-9373-4720-91f8-0c0b741cb039",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ba4c6b42-7d1e-4768-88ab-ed888e6f598b",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bf539f72-0b51-4e80-88e5-612f4e9bd0e7",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f3d8798c-d1a7-48c1-bda5-53475b99bfae",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d4e8f869-1031-41b3-a1d8-9764b7d4ca81",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/EmployeeIDP/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/EmployeeIDP/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "4dbd507a-3286-45ae-abaa-425db8b75676",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b3429514-433b-4602-a144-445b1978dd49",
      "clientId": "waiverdb",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "nosecret",
      "redirectUris": [
        "http://127.0.0.1:5004/oidc_callback"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1712218520",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "31bf31e2-8534-4d7c-9ffd-23c6faee596e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "97cc09a0-fea9-40fe-8535-a0f0134fa7a4",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2a329b06-2791-4305-8f2c-b3c6c9f8a372",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "65214fa3-00c1-4ff1-8845-c263e826ffae",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "bc0933a9-d400-44ee-9452-2cafe440f69f",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5583abe7-d301-4454-8805-257aaa4af391",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "2fc688be-296f-46f6-88e4-90d1fa48418c",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "32dac65f-06c5-44fc-ba00-94d8b5a3d541",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "caf8de80-a136-43cf-8f6e-d46134c85a4d",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a95b641f-fb7f-448c-b181-ccb83550235c",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b1daeb92-9352-4d37-9619-365678adb4a1",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "1d334427-cf90-4567-913f-9db6fff8ba9b",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ac199410-e12b-4aff-9362-bf1bec637736",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7a5b8aac-8c39-4128-b54d-1cb138a8397d",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "09dfbc67-2d70-4167-b866-98ce4fd7c270",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b9162bd4-29fe-4514-badf-a5bd9763e3a7",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "73089de5-8d73-4ded-ac2a-96cbabe3c121",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "91e65435-5f7f-4ba7-9689-f6dbe629eeec",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c012fe1f-c4d7-4b73-86e9-1ffd61859474",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fa941fa5-46c5-42fb-8f1a-c1f927d286d0",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e398286b-7568-408e-8e3c-33345cf0443f",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "be401d5f-b226-4891-8653-f770aa5a6ece",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "23a61b04-9cb0-414e-8f13-a3688bd335b3",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "6620c5c6-0630-4ae5-a89c-07fd0bfba5ec",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "597f9b67-85b3-4c44-8b6f-5c28039d018d",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bcc73248-4d9b-47ff-9796-aff798359fec",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "72a297fd-b117-46eb-b6fa-69c7793d3973",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "65c6bee7-23bf-4e08-ad65-423812c706ab",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ac94ee04-740a-49dc-aa74-83f7054d071e",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "95ebbb50-6c8f-4da7-a790-69dedc71a4a7",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "16fbedf0-88a2-4a41-bdca-bc0719340df7",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "ca19a199-0be1-4ae3-80b7-da66a3d50873",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "6f6870e4-ea0c-4db9-8fb3-4049f64cc9b4",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "1f3ebcb3-9489-46d2-9184-d742703b540a",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "dc7764c5-6b7c-42a5-98ff-61cf471a417e",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "6194ed35-16e0-43e1-9744-c15225511628",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ef9b2a5c-f582-4b2b-9cdf-4221940a1c3c",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "b4edc9d2-740d-46da-8dea-b9cd0e377fc0",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "cfa4c7dc-dd38-47b6-af5f-21106f9a7047",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ddd9bc53-abb3-4858-a493-b6e5b274486d",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "b7384700-ea99-497a-9376-5ca96f75cbc7",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "627fc6c3-8d8d-4223-959a-c63cfbc7fdce",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "93ce040a-d3b3-467f-8105-9815ea53faba",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "2cc611a3-2492-43ba-9417-c58eba7bf8fe",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "57a60f15-a824-4665-b682-b3623fc79ace",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "c7a0fe3f-ee82-4100-aa6d-24917f5933f9",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "157a1fa5-31b3-468b-9ad3-1cf75c73cbfc",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "f75c7b49-6e05-4b7c-b136-bf0f7919429d",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "3b92332a-9e2f-4cfc-a744-de7b7a53cdcc",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAxv2wnR55OF+XPXdhjJtTZYFvv84RAacRSFk2ds58Zp2Qed1fVBfsa0iUUvvz3H674qurCW7nrAUODUtFF7bqboJlc9n2s4wCm4hP3VaRyBzo8Th5YIS1NNJC/wkl7lbJZA9ymq+Zq/4003RyOiYER+RyRbOZskpCtDenrQ+I7UkDlGNiYfx1Ma5VmO2+P944Hbh+5Gii6ADLKxPPJOS1sZuUIL2dcAzKKKuMFAPGuvoQQLWQUq8AqXfWx8FhvvC4K8qzR9nYHv2SF6ewJGgVf6xKAeztkrB7rhrOmtnYusTFzF2PsYvRSwLpvoHZisdD2KtmvPE8eu9nFHixEqrtZwIDAQABAoIBABb3mfEQiYTjAkBDF/xpbb87U3bBEH/Ef39TuLBkFcH8RqbM0QoSNs830dLK0h3YIim/5Ej9nCS5HU2V1fQuQFxKlZjBBrM4zOY/CJoZ5KVDB58r2aqKYVB8QjpQcn3SANhD24I/aU5g0/UMrXseVIPTD14RztgKr9dAIzdwzGjik9/wAK8KobL+iwn2fMwvZ9rAZLA0f+3sRJxvEWJqzyyCr6U0GF8tsNv5aApFJIrJdsP17JfbBgL5fbekDnLTvdp0ohIofs1DIy1g0nIAFK9jCTs1BqIi9xIRbLe30z94Pzl4Vmuil+omta5HVN2AuF5v8oSCHJhJGGRgurzS2s0CgYEA6Ejbx7rWjj0gLutGp1ksl1hs5FtYbVXN4yq4fIuId/+T+HPxgttzSvsMILe6L1s4TQFVRa3+CLmJjeQGIAldMbYimv8w8d3G29tvP90LbmxbJ4h1lvahKlApvAUq3Ya/g/B1R4M52qldsaeYqJNd6OkqEXcrTfR3q/7D9HdTFDUCgYEA206lwTu78L+xwl7s7yg1YtqTHhr8VqIpKeqmsutBdjtfXYqil4W+5gYcxrixFKYw9GQrUB3WN9QmjgcoGdQNQsbR8os2GNesh51qCAX7Ac5bvw+5TiSmZpduYArqu83HVV+3KsQW92Po/cbtJWik8Qh1vj2UHxmnTEDBvursdqsCgYBBusQ+a3dlPpTJ0hfnKQu+M+50XAjUv5AINUGJNK7EThUgHCb+QX0Jfaq742GTHvv6hmML2aVl8KKk/R5imGO/umtmcsn11yz7b8e2SaV/dLgCotGri1SltZNpugicMRImkreNKewIHR7/M462PSU40CnwUUl2wLPQfsISfmWK9QKBgHaeu5khLi6yAPwZTB6vqPCnORv3jLVvUMSTX0c3aFkDFDoMWpWKig7xD2+NRnrcyW3nIGZdPRlFbvUzecU+pU2RLM377m7ReUiBJHDiizoW3Bkj8B8MQ9UJ43GfdgfO7hqHgxNmrOVy7PsXNf4d89lLsiQMOqn3vj3IaQNTHkOxAoGAdOOoO4FgCLWHWCbea7xQdSrOttLDMeLn2Hq1GDnAi3Jyk48hu/ZtfSC/zWnKqA0DL1rNa6KgYvHbK9LEsp7dd+25IC8HBbDfMuDVqnM8rfio9ZDXoEguPrJEp5Tqc9zVoHXrhjwnKvT1gxo/kRByVlSv/aiIKEK7c5Pz7PVle7I="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICpTCCAY0CBgGOqClRfDANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtFbXBsb3llZUlEUDAeFw0yNDA0MDQwODA5MjNaFw0zNDA0MDQwODExMDNaMBYxFDASBgNVBAMMC0VtcGxveWVlSURQMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxv2wnR55OF+XPXdhjJtTZYFvv84RAacRSFk2ds58Zp2Qed1fVBfsa0iUUvvz3H674qurCW7nrAUODUtFF7bqboJlc9n2s4wCm4hP3VaRyBzo8Th5YIS1NNJC/wkl7lbJZA9ymq+Zq/4003RyOiYER+RyRbOZskpCtDenrQ+I7UkDlGNiYfx1Ma5VmO2+P944Hbh+5Gii6ADLKxPPJOS1sZuUIL2dcAzKKKuMFAPGuvoQQLWQUq8AqXfWx8FhvvC4K8qzR9nYHv2SF6ewJGgVf6xKAeztkrB7rhrOmtnYusTFzF2PsYvRSwLpvoHZisdD2KtmvPE8eu9nFHixEqrtZwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQDCOA0tQIwu6RdoWap6wtm2sobhDLuWlpPlrwRl3Zdu+a/Y5YT1iJ0UgPn0HZ7BDX1FPrls5I6w9vuHNg5ldrIZzzsRAy7pv5n/aTxBVX5CQyiLOnDKlU6C5TreTn/LjysinOXYI53XJ8JP42mzs8dM49rl0bBhkp+U+9nwQvQgG2uLfMxPG7mheiR5/lCVJ54bXqCu348MXYuZmFDV9g8a74LppnpT8FcpVRRst3uDJkd4r20uwdopXL363MltHYwTyGXi2z9pPgii4c1dT/P/ozBOw8eCyokVrz60WYirbsGDNVOuh5EKgXQh/g+tFNsLQWXgli49QkPplw1MrFTL"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "cd5c7b55-66de-4569-9324-8d7471b67137",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "d7f4d8a1-af5a-48d2-884b-7c4b02e90e40"
          ],
          "secret": [
            "FBrrx404OKOMEYhd2xAl_Q"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "0c7701e7-5b65-4663-a3a0-8ec9684252a0",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA5DgblHqF8SfbpQCpcvknY+eaAXXD2CBRR96gI8zQwvZ/Eu5uWEKsW7j9G5vfATBmEEuhqUZcMSCHOFWaxVr64PNxCR38bChG45LWbrfz1JGJjZM+gcuLNHJst8lIvxfBcJOO4zh2VP5O1coKH6NBqHhVPvmksyQLFMhf+dJw9+RPdQ4TTdSR8+iJqXFHe7IeDa22+Vnqa8u8f7irg3RniX60lmGCNxlQ6cmoogcjUlCu3n5LBvmwlFGk9OUJLQVE4RsxiPtB2ME/TP9Dh2sSKRVJ5I/1mE7GS5CzO1mp58imf8nR2nGKqPYDnEhoQCgkzqlDPXPVGN2v5JW8kPeCEwIDAQABAoIBAG/9mIskFNZiWMZ/rKde3JWJ8WkGATTtpvU9qhfnSgpiK7l+h2eIUEwyWwJRWv2aYntcodgPTu5MqA5c87YlDzeUPsPakyQAH8lNJSzv2BdX08hFmUbYO1dhTzhg7fHYFnTH9DZMXsUWhlki7BTaaD3jzvE4UDoYVde8/Fv7iLQbx/tzmgw9A9WvMJJRzFSFtjlehTgp8cMu1mg+ekM+lkbBJ4ZB40vK/BBKAK4wiQVOmd3lDmQLAO4IS2glx4Avd1xN+BYGOqNBRGRBlSQrvLxib1yekjYxGnmQwG3eMMMzONuSM6N0LFG/qrmejhwOBOuL+rJ8YMyY7Gzrq6BycQECgYEA+ytdPxtD0ER3roSXiciAXL2z5ZyE+Y57zhv23n4cHVejQ3O601ck/HXS6Y4IcH+YLW1KqNBXj+BJwnGkjzfSIzpiqOQs2mXi/0KMOZtoQV9HwbA6775f5e5ZYt4RyEL4EQSQVTu1ExHEDfnS0VoA4crGfnGheskZ2y5C1gpNYS0CgYEA6Ju/bpAfBUsuk879KKJ+V5u4HBJUvAgZ+vE3+VRd8gRUUsOQMO5cMhpAe2IPEivxD7wZjcNLey/BH4QiS0uftlFYVvC6Zx5U5EucnJk3ypw2o/okwvKdfG0sqcjJSxbmhZIP2Gdl/UZZ+shW9fRy6GJBOPavz6tC/rIOcDyN+D8CgYEA2Svjkl8mwXuR6CnpRU9B/e5hEBXHvGgAkHQJftOXx58xIW99iKL+7fOKjDss/Oi2UgD/3vtV2qdZ33CXkuX3IlKnX9T7G1OhdIi76kt/V5bk2opgS09WZ98xFpVg1sFg8IX7rlbT+EsSM+tg53dk79Z+znG96Abd/m//hkaeJXkCgYBxXf813q4PwW2pAlfmJxQWlMFthQ2hOv2WjVwve4vx+WQzlja/clyi2qKUv90CiUIK3i1CJ22xUzv3pUmlkuz7SbgZX2gp++F6BtQEirRjXjFPSAoErYRN8VO0SDS7ESU28lIgsXxGrbQLAvtHEmWylridD7XuK9USFyvsTccPtwKBgERUllrWBfXeTmzsHPmhfxzqjK0+KAAIPxBML4eBMCQGBy+UMqvmFhcm2ABawt3do+chegQzVIVt5AYhoV8vFfZsKXP8JH1w+QlWBMlpb5oGRmsgDxzsI0HZOfkpzwsuaOb8GjGsmFM/Yjat3ZBlLhHKtbDD4PZwZ3kBSU7lNlyl"
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICpTCCAY0CBgGOqClSrjANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtFbXBsb3llZUlEUDAeFw0yNDA0MDQwODA5MjRaFw0zNDA0MDQwODExMDRaMBYxFDASBgNVBAMMC0VtcGxveWVlSURQMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5DgblHqF8SfbpQCpcvknY+eaAXXD2CBRR96gI8zQwvZ/Eu5uWEKsW7j9G5vfATBmEEuhqUZcMSCHOFWaxVr64PNxCR38bChG45LWbrfz1JGJjZM+gcuLNHJst8lIvxfBcJOO4zh2VP5O1coKH6NBqHhVPvmksyQLFMhf+dJw9+RPdQ4TTdSR8+iJqXFHe7IeDa22+Vnqa8u8f7irg3RniX60lmGCNxlQ6cmoogcjUlCu3n5LBvmwlFGk9OUJLQVE4RsxiPtB2ME/TP9Dh2sSKRVJ5I/1mE7GS5CzO1mp58imf8nR2nGKqPYDnEhoQCgkzqlDPXPVGN2v5JW8kPeCEwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCt/dD5WLICgxT4mH35E9/nAvovVdThdbFT5oTqVY5qcxGaXDL7gK+CetudMwnYdJvcw1NzQUvqr0jN6Fm1HysQIT1wYCLVIk3T6G8O+B6illkhYlWyy/PqCBMR86jf3sCyjgS++tIjCWhgFEZxe9NDVbL+W5Y+A/342/IlpdqHeTAshQOqQWl63fQuK6XJZtl1V9jaitrQCPamkbmqZJJwwOGQgj8/okFnAF5xKRL6AY4w/aLlO41R8X7f02xVON9d68+zTcH0UjBkvafmQFipEUm6Y2p+K2F0QrKb5DLL7r63LlFP67Yoonoua5LvEX68JiSK4Q+2049NuK258h8m"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "6eb66356-0ec5-4ef8-8d0a-aafc0547fc8c",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "59ba3c7e-a5f7-4e7a-a38f-ecbf2d08f830"
          ],
          "secret": [
            "iihkTm-SG4mift09OrhyUoW2bwVxo2FXUnO0SXV1ykr2KxtVdzO_u6abYZRM_O6IXj8oMFSiBkgYsZVsLKOpJgdJHGct9Xd-t2jKULZ4nXjkdZmIr1jfGb2v1sX4v5JenNoz1PtDPFQKvMlACNiJgbYNLaEeErqRUVxeGnDqcHA"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "e7c1138c-dc2f-4791-a0fd-f55ec7750e0b",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7d385adf-4aa3-4b75-b5df-fd11ef06f6bd",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ef23b512-3ad5-41cc-99e4-06436d403044",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4f54a6b4-6150-47ad-9ca3-dcf78eddef31",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "574eec06-2cb1-4cce-8dad-405cb4ed55aa",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8ddd9367-eee9-46bf-a7d3-92b722a44bef",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "007b845d-5916-4caa-a516-003277364336",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "05d846ac-9f3c-4ddb-867e-a367358cdfe9",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7ab4ecec-9047-4b03-9be7-3bc6713c1c4c",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1d415dce-bc8e-40d4-9ea5-41ed113b1005",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "18daca48-2bd7-48f9-ba96-cf09f08aafda",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3ebf864f-d3d5-4a48-8b40-96527d8c75b7",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a08932b5-9e52-4601-9e97-7d13b7132fbc",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "68439fad-0022-4905-866d-28cd8f906ba1",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ef52d123-3415-4a0c-8689-34ed48a45bb2",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cf5a0e33-d0e9-432f-bc63-979271749d2c",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aea2987e-7c2d-4294-b862-6ca5eb51a383",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7875d59b-b209-475b-8291-006e961893ff",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "e8b75adb-5768-4780-9e3e-adcf93e68be7",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "9917c4cd-4ad4-40dd-be58-54049105a55b",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "24.0.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
